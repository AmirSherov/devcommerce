'use client';

import { useState, useEffect } from 'react';
import { aiAPI } from '../../api/ai/api';

interface AIGeneratorModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSuccess: (portfolio: any, generationTime?: number) => void;
  isPremium: boolean;
}

interface AIFormData {
  title: string;
  description: string;
  prompt: string;
  style: string;
  tags: string[];
}

const STYLE_OPTIONS = [
  { value: 'modern', label: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π', description: '–ß–∏—Å—Ç—ã–µ –ª–∏–Ω–∏–∏, –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã, –∞–Ω–∏–º–∞—Ü–∏–∏' },
  { value: 'minimal', label: '–ú–∏–Ω–∏–º–∞–ª–∏–∑–º', description: '–ú–Ω–æ–≥–æ –±–µ–ª–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞, –ø—Ä–æ—Å—Ç–æ—Ç–∞' },
  { value: 'creative', label: '–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π', description: '–Ø—Ä–∫–∏–π –¥–∏–∑–∞–π–Ω, –Ω–µ–æ–±—ã—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã' },
  { value: 'business', label: '–ë–∏–∑–Ω–µ—Å', description: '–°—Ç—Ä–æ–≥–∏–π —Å—Ç–∏–ª—å, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞' },
  { value: 'dark', label: '–¢–µ–º–Ω–∞—è —Ç–µ–º–∞', description: '–¢–µ–º–Ω—ã–π —Ñ–æ–Ω, –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã' },
  { value: 'colorful', label: '–Ø—Ä–∫–∏–π', description: '–ö—Ä–∞—Å–æ—á–Ω—ã–π –¥–∏–∑–∞–π–Ω, –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞' },
];

const PROMPT_EXAMPLES = [
  '–°–æ–∑–¥–∞–π –ª–µ–Ω–¥–∏–Ω–≥ –¥–ª—è IT-—Å—Ç–∞—Ä—Ç–∞–ø–∞ —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π –∏ –Ω–µ–æ–Ω–æ–≤—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏',
  '–°–¥–µ–ª–∞–π –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞ —Å –≥–∞–ª–µ—Ä–µ–µ–π –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º–æ–π',
  '–õ–µ–Ω–¥–∏–Ω–≥ –¥–ª—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ —Å –º–µ–Ω—é –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Å—Ç–æ–ª–∏–∫–æ–≤',
  '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –∫–æ–º–ø–∞–Ω–∏–∏',
  '–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–∏–∑–∞–π–Ω–µ—Ä–∞ —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏',
  '–õ–µ–Ω–¥–∏–Ω–≥ –¥–ª—è —Ñ–∏—Ç–Ω–µ—Å-—Ü–µ–Ω—Ç—Ä–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
  '–°–∞–π—Ç –¥–ª—è –∫–æ—Ñ–µ–π–Ω–∏ —Å —É—é—Ç–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –∏ –∫–∞—Ä—Ç–æ–π',
  '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –Ω–∞–≤—ã–∫–∞–º–∏'
];

export default function AIGeneratorModal({ isOpen, onClose, onSuccess, isPremium }: AIGeneratorModalProps) {
  const [formData, setFormData] = useState<AIFormData>({
    title: '',
    description: '',
    prompt: '',
    style: 'modern',
    tags: []
  });
  const [isGenerating, setIsGenerating] = useState(false);
  const [error, setError] = useState('');
  const [currentStep, setCurrentStep] = useState(1);
  const [showExamples, setShowExamples] = useState(false);
  const [userLimits, setUserLimits] = useState(null);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
  useEffect(() => {
    if (isOpen && isPremium) {
      loadUserLimits();
    }
  }, [isOpen, isPremium]);

  const loadUserLimits = async () => {
    try {
      const limits = await aiAPI.getUserLimits();
      setUserLimits(limits);
    } catch (error) {
      console.error('Error loading user limits:', error);
    }
  };

  const handleInputChange = (field: keyof AIFormData, value: any) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
    setError('');
  };

  const handleTagsChange = (tagsString: string) => {
    const tags = tagsString
      .split(',')
      .map(tag => tag.trim().toLowerCase())
      .filter(tag => tag.length > 0);
    
    handleInputChange('tags', tags.slice(0, 10)); // –ú–∞–∫—Å–∏–º—É–º 10 —Ç–µ–≥–æ–≤
  };

  const handleExampleClick = (example: string) => {
    setFormData(prev => ({
      ...prev,
      prompt: example
    }));
    setShowExamples(false);
  };

  const validateForm = () => {
    if (!formData.title.trim()) {
      setError('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞');
      return false;
    }
    if (formData.title.trim().length < 3) {
      setError('–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞');
      return false;
    }
    if (!formData.prompt.trim()) {
      setError('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–ø—Ç –¥–ª—è AI');
      return false;
    }
    if (formData.prompt.trim().length < 10) {
      setError('–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤');
      return false;
    }
    return true;
  };

  const handleGenerate = async () => {
    if (!validateForm()) return;

    setIsGenerating(true);
    setError('');
    setCurrentStep(2);

    try {
      const result = await aiAPI.premiumGenerate({
        title: formData.title.trim(),
        description: formData.description.trim(),
        prompt: formData.prompt.trim(),
        style: formData.style,
        tags: formData.tags,
        industry: 'general'
      });

      if (result.success) {
        setCurrentStep(3);
        
        console.log('üéâ –ü–†–ï–ú–ò–£–ú –ì–ï–ù–ï–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!');
        console.log('‚úÖ –£–ª—É—á—à–µ–Ω–∏—è:', result.generation_info?.enhanced_features);
        console.log('üöÄ –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', result.generation_info?.response_time, '—Å–µ–∫');
        console.log('‚ö° –®–∞–≥–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ:', result.generation_info?.generation_steps);
        
        setTimeout(() => {
          onSuccess(result.portfolio, result.generation_info?.response_time);
          handleClose();
        }, 2000);
      } else {
        setError(result.error || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —à–µ–¥–µ–≤—Ä–∞');
        setCurrentStep(1);
      }
    } catch (error: any) {
      console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–µ–º–∏—É–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', error);
      setError(error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —à–µ–¥–µ–≤—Ä–∞');
      setCurrentStep(1);
    } finally {
      setIsGenerating(false);
    }
  };

  const handleClose = () => {
    setFormData({
      title: '',
      description: '',
      prompt: '',
      style: 'modern',
      tags: []
    });
    setError('');
    setCurrentStep(1);
    setIsGenerating(false);
    setShowExamples(false);
    onClose();
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4">
      <div className="bg-black border-2 border-white rounded-lg w-full max-w-2xl max-h-[90vh] overflow-y-auto">
        {/* Header */}
        <div className="flex items-center justify-between p-4 border-b border-white">
          <div className="flex items-center space-x-3">
            <div className="w-8 h-8 bg-white rounded-lg flex items-center justify-center">
              <span className="text-black text-lg font-bold">AI</span>
            </div>
            <div>
              <h2 className="text-lg font-bold text-white">AI –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä</h2>
              <p className="text-gray-400 text-xs">–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–∞ —Å –ø–æ–º–æ—â—å—é –ò–ò</p>
            </div>
          </div>
          <button
            onClick={handleClose}
            className="text-gray-400 hover:text-white transition-colors"
            disabled={isGenerating}
          >
            <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>

        {/* Progress Steps */}
        <div className="px-4 py-3 border-b border-white">
          <div className="flex items-center space-x-3">
            <div className={`flex items-center space-x-1 ${currentStep >= 1 ? 'text-white' : 'text-gray-500'}`}>
              <div className={`w-6 h-6 rounded-full border flex items-center justify-center text-xs ${
                currentStep >= 1 ? 'border-white bg-white text-black' : 'border-gray-500'
              }`}>
                {currentStep > 1 ? '‚úì' : '1'}
              </div>
              <span className="text-xs font-medium">–ù–∞—Å—Ç—Ä–æ–π–∫–∞</span>
            </div>
            <div className={`flex-1 h-px ${currentStep >= 2 ? 'bg-white' : 'bg-gray-600'}`}></div>
            <div className={`flex items-center space-x-1 ${currentStep >= 2 ? 'text-white' : 'text-gray-500'}`}>
              <div className={`w-6 h-6 rounded-full border flex items-center justify-center text-xs ${
                currentStep >= 2 ? 'border-white bg-white text-black' : 'border-gray-500'
              }`}>
                {currentStep > 2 ? '‚úì' : '2'}
              </div>
              <span className="text-xs font-medium">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è</span>
            </div>
            <div className={`flex-1 h-px ${currentStep >= 3 ? 'bg-white' : 'bg-gray-600'}`}></div>
            <div className={`flex items-center space-x-1 ${currentStep >= 3 ? 'text-white' : 'text-gray-500'}`}>
              <div className={`w-6 h-6 rounded-full border flex items-center justify-center text-xs ${
                currentStep >= 3 ? 'border-white bg-white text-black' : 'border-gray-500'
              }`}>
                {currentStep >= 3 ? '‚úì' : '3'}
              </div>
              <span className="text-xs font-medium">–ì–æ—Ç–æ–≤–æ</span>
            </div>
          </div>
        </div>

        {/* Content */}
        <div className="p-6">
          {currentStep === 1 && (
            <div className="space-y-6">
              {/* –õ–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
              {userLimits && (
                <div className="bg-gray-800 border border-gray-600 rounded-lg p-4">
                  <div className="flex items-center justify-between">
                    <span className="text-white font-medium">–û—Å—Ç–∞–ª–æ—Å—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–π —Å–µ–≥–æ–¥–Ω—è:</span>
                    <span className="text-blue-400 font-bold">{userLimits.remaining_today}/5</span>
                  </div>
                  {userLimits.remaining_today === 0 && (
                    <p className="text-red-400 text-sm mt-2">–î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω. –°–±—Ä–æ—Å–∏—Ç—Å—è –∑–∞–≤—Ç—Ä–∞.</p>
                  )}
                </div>
              )}

              {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ */}
              <div>
                <label className="block text-white font-medium mb-2">
                  –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ <span className="text-red-400">*</span>
                </label>
                <input
                  type="text"
                  value={formData.title}
                  onChange={(e) => handleInputChange('title', e.target.value)}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –õ–µ–Ω–¥–∏–Ω–≥ –¥–ª—è IT –∫–æ–º–ø–∞–Ω–∏–∏"
                  className="w-full bg-gray-800 border border-gray-600 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-blue-400 focus:outline-none transition-colors"
                  maxLength={200}
                />
                <p className="text-gray-400 text-xs mt-1">{formData.title.length}/200</p>
              </div>

              {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
              <div>
                <label className="block text-white font-medium mb-2">
                  –û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
                </label>
                <textarea
                  value={formData.description}
                  onChange={(e) => handleInputChange('description', e.target.value)}
                  placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"
                  rows={3}
                  className="w-full bg-gray-800 border border-gray-600 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-blue-400 focus:outline-none transition-colors resize-none"
                  maxLength={1000}
                />
                <p className="text-gray-400 text-xs mt-1">{formData.description.length}/1000</p>
              </div>

              {/* AI –ü—Ä–æ–º–ø—Ç */}
              <div>
                <div className="flex items-center justify-between mb-2">
                  <label className="block text-white font-medium">
                    AI –ü—Ä–æ–º–ø—Ç <span className="text-red-400">*</span>
                  </label>
                  <button
                    type="button"
                    onClick={() => setShowExamples(!showExamples)}
                    className="text-blue-400 hover:text-blue-300 text-sm transition-colors"
                  >
                    {showExamples ? '–°–∫—Ä—ã—Ç—å –ø—Ä–∏–º–µ—Ä—ã' : '–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã'}
                  </button>
                </div>
                
                {showExamples && (
                  <div className="mb-4 bg-gray-800 border border-gray-600 rounded-lg p-4">
                    <p className="text-gray-300 text-sm mb-3">–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø—Ä–∏–º–µ—Ä —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</p>
                    <div className="space-y-2">
                      {PROMPT_EXAMPLES.map((example, index) => (
                        <button
                          key={index}
                          onClick={() => handleExampleClick(example)}
                          className="w-full text-left p-3 bg-gray-700 hover:bg-gray-600 rounded text-gray-300 text-sm transition-colors"
                        >
                          {example}
                        </button>
                      ))}
                    </div>
                  </div>
                )}

                <textarea
                  value={formData.prompt}
                  onChange={(e) => handleInputChange('prompt', e.target.value)}
                  placeholder="–û–ø–∏—à–∏—Ç–µ –∫–∞–∫–æ–π —Å–∞–π—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å: —Ç–µ–º–∞—Ç–∏–∫—É, —Å—Ç–∏–ª—å, —Ñ—É–Ω–∫—Ü–∏–∏..."
                  rows={4}
                  className="w-full bg-gray-800 border border-gray-600 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-blue-400 focus:outline-none transition-colors resize-none"
                  maxLength={500}
                />
                <p className="text-gray-400 text-xs mt-1">{formData.prompt.length}/500</p>
              </div>

              {/* –°—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞ */}
              <div>
                <label className="block text-white font-medium mb-3">–°—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞</label>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                  {STYLE_OPTIONS.map((style) => (
                    <label
                      key={style.value}
                      className={`cursor-pointer p-4 border-2 rounded-lg transition-all ${
                        formData.style === style.value
                          ? 'border-blue-400 bg-blue-400 bg-opacity-10'
                          : 'border-gray-600 hover:border-gray-500'
                      }`}
                    >
                      <input
                        type="radio"
                        name="style"
                        value={style.value}
                        checked={formData.style === style.value}
                        onChange={(e) => handleInputChange('style', e.target.value)}
                        className="sr-only"
                      />
                      <div className="flex items-center space-x-3">
                        <div className={`w-4 h-4 rounded-full border-2 ${
                          formData.style === style.value ? 'border-blue-400 bg-blue-400' : 'border-gray-500'
                        }`}>
                          {formData.style === style.value && (
                            <div className="w-2 h-2 bg-white rounded-full mx-auto mt-0.5"></div>
                          )}
                        </div>
                        <div>
                          <p className="text-white font-medium">{style.label}</p>
                          <p className="text-gray-400 text-sm">{style.description}</p>
                        </div>
                      </div>
                    </label>
                  ))}
                </div>
              </div>

              {/* –¢–µ–≥–∏ */}
              <div>
                <label className="block text-white font-medium mb-2">
                  –¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
                </label>
                <input
                  type="text"
                  value={formData.tags.join(', ')}
                  onChange={(e) => handleTagsChange(e.target.value)}
                  placeholder="landing, business, modern"
                  className="w-full bg-gray-800 border border-gray-600 rounded-lg px-4 py-3 text-white placeholder-gray-400 focus:border-blue-400 focus:outline-none transition-colors"
                />
                <p className="text-gray-400 text-xs mt-1">–ú–∞–∫—Å–∏–º—É–º 10 —Ç–µ–≥–æ–≤</p>
              </div>

              {/* –û—à–∏–±–∫–∞ */}
              {error && (
                <div className="bg-red-900 bg-opacity-50 border border-red-600 rounded-lg p-4">
                  <p className="text-red-400">{error}</p>
                </div>
              )}
            </div>
          )}

          {currentStep === 2 && (
            <div className="text-center py-8">
              <div className="w-12 h-12 mx-auto mb-4 bg-white rounded-full flex items-center justify-center animate-pulse">
                <span className="text-black text-xl font-bold">üöÄ</span>
              </div>
              <h3 className="text-lg font-bold text-white mb-3">–°–æ–∑–¥–∞–µ–º –®–ï–î–ï–í–† —Å –ø–æ–º–æ—â—å—é AI...</h3>
              <div className="space-y-2 text-gray-400 text-sm">
                <div className="flex items-center justify-center space-x-2">
                  <span className="w-2 h-2 bg-white rounded-full animate-pulse"></span>
                  <p>üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à –±–∏–∑–Ω–µ—Å –∏ –∏–Ω–¥—É—Å—Ç—Ä–∏—é</p>
                </div>
                <div className="flex items-center justify-center space-x-2">
                  <span className="w-2 h-2 bg-white rounded-full animate-pulse delay-75"></span>
                  <p>üèóÔ∏è –ü—Ä–æ–µ–∫—Ç–∏—Ä—É–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏ UX</p>
                </div>
                <div className="flex items-center justify-center space-x-2">
                  <span className="w-2 h-2 bg-white rounded-full animate-pulse delay-150"></span>
                  <p>üé® –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é –¥–∏–∑–∞–π–Ω-–∫–æ–Ω—Ü–µ–ø—Ü–∏—é</p>
                </div>
                <div className="flex items-center justify-center space-x-2">
                  <span className="w-2 h-2 bg-white rounded-full animate-pulse delay-200"></span>
                  <p>‚úçÔ∏è –ü–∏—à–µ–º –ø—Ä–æ–¥–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç</p>
                </div>
                <div className="flex items-center justify-center space-x-2">
                  <span className="w-2 h-2 bg-white rounded-full animate-pulse delay-300"></span>
                  <p>üñºÔ∏è –ü–æ–¥–±–∏—Ä–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
                </div>
                <div className="flex items-center justify-center space-x-2">
                  <span className="w-2 h-2 bg-white rounded-full animate-pulse delay-[400ms]"></span>
                  <p>‚ö° –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</p>
                </div>
                <div className="flex items-center justify-center space-x-2">
                  <span className="w-2 h-2 bg-white rounded-full animate-pulse delay-500"></span>
                  <p>üéØ –°–æ–±–∏—Ä–∞–µ–º –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º</p>
                </div>
              </div>
              <div className="mt-6">
                <div className="w-full bg-gray-800 border border-white rounded-full h-2 overflow-hidden">
                  <div className="bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full animate-pulse" style={{ width: '75%' }}></div>
                </div>
              </div>
              <p className="text-gray-500 text-xs mt-4">
                üöÄ <strong>–ü–†–ï–ú–ò–£–ú –ü–†–û–¶–ï–°–°:</strong> 7 —à–∞–≥–æ–≤ –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É
              </p>
              <p className="text-gray-500 text-xs mt-1">
                ‚è±Ô∏è –û–±—ã—á–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç 45-60 —Å–µ–∫—É–Ω–¥
              </p>
            </div>
          )}

          {currentStep === 3 && (
            <div className="text-center py-8">
              <div className="w-12 h-12 mx-auto mb-4 bg-white rounded-full flex items-center justify-center">
                <span className="text-black text-lg font-bold">‚úì</span>
              </div>
              <h3 className="text-lg font-bold text-white mb-2">–°–∞–π—Ç —Å–æ–∑–¥–∞–Ω!</h3>
              <p className="text-gray-400 text-sm">–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º...</p>
            </div>
          )}
        </div>

        {/* Footer */}
        {currentStep === 1 && (
          <div className="flex items-center justify-between p-4 border-t border-white">
            <button
              onClick={handleClose}
              className="px-4 py-2 bg-gray-800 border border-white hover:bg-gray-700 text-white rounded-lg transition-colors"
              disabled={isGenerating}
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button
              onClick={handleGenerate}
              disabled={isGenerating || !isPremium || (userLimits && userLimits.remaining_today === 0)}
              className="px-4 py-2 bg-white hover:bg-gray-200 text-black rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed font-medium"
            >
              {isGenerating ? '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º...' : '–°–æ–∑–¥–∞—Ç—å —Å–∞–π—Ç'}
            </button>
          </div>
        )}
      </div>
    </div>
  );
} 