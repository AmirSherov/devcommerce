# Generated by Django 5.2.3 on 2025-07-14 18:35

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StorageContainer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Название контейнера', max_length=100)),
                ('api_key', models.CharField(help_text='Уникальный API ключ для доступа к контейнеру', max_length=64, unique=True)),
                ('is_public', models.BooleanField(default=False, help_text='Публичный ли доступ к контейнеру')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли контейнер')),
                ('files_count', models.IntegerField(default=0, help_text='Количество файлов в контейнере')),
                ('total_size', models.BigIntegerField(default=0, help_text='Общий размер файлов в байтах')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_containers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Контейнер хранилища',
                'verbose_name_plural': 'Контейнеры хранилища',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='StorageAPILog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(help_text='Использованный API ключ', max_length=64)),
                ('method', models.CharField(help_text='HTTP метод', max_length=10)),
                ('endpoint', models.CharField(help_text='Эндпоинт API', max_length=200)),
                ('status_code', models.IntegerField(help_text='HTTP статус код')),
                ('user_agent', models.CharField(blank=True, help_text='User Agent', max_length=500)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP адрес', null=True)),
                ('response_time', models.FloatField(blank=True, help_text='Время ответа в секундах', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Сообщение об ошибке')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_logs', to='storage.storagecontainer')),
            ],
            options={
                'verbose_name': 'API лог хранилища',
                'verbose_name_plural': 'API логи хранилища',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StorageFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(help_text='Оригинальное имя файла', max_length=255)),
                ('s3_key', models.CharField(help_text='Путь к файлу в S3', max_length=500)),
                ('file_size', models.BigIntegerField(help_text='Размер файла в байтах')),
                ('mime_type', models.CharField(help_text='MIME тип файла', max_length=100)),
                ('original_filename', models.CharField(help_text='Исходное имя файла', max_length=255)),
                ('file_extension', models.CharField(blank=True, help_text='Расширение файла', max_length=20)),
                ('is_public', models.BooleanField(default=False, help_text='Публичный ли файл')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли файл')),
                ('upload_session', models.CharField(blank=True, help_text='ID сессии загрузки', max_length=100)),
                ('checksum', models.CharField(blank=True, help_text='MD5 хеш файла', max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='storage.storagecontainer')),
            ],
            options={
                'verbose_name': 'Файл хранилища',
                'verbose_name_plural': 'Файлы хранилища',
                'ordering': ['-created_at'],
                'unique_together': {('container', 'filename')},
            },
        ),
        migrations.CreateModel(
            name='UserStorageUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Дата статистики')),
                ('bytes_used', models.BigIntegerField(default=0, help_text='Использовано байт')),
                ('files_count', models.IntegerField(default=0, help_text='Количество файлов')),
                ('containers_count', models.IntegerField(default=0, help_text='Количество контейнеров')),
                ('uploads_count', models.IntegerField(default=0, help_text='Количество загрузок')),
                ('uploads_size', models.BigIntegerField(default=0, help_text='Размер загруженных файлов')),
                ('deletions_count', models.IntegerField(default=0, help_text='Количество удалений')),
                ('deletions_size', models.BigIntegerField(default=0, help_text='Размер удаленных файлов')),
                ('file_types_stats', models.JSONField(default=dict, help_text='Статистика по типам файлов')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_usage', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Использование хранилища',
                'verbose_name_plural': 'Использование хранилища',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
