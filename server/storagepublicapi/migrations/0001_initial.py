# Generated by Django 5.2.3 on 2025-07-14 18:52

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('storage', '0002_storagefile_file_url'),
    ]

    operations = [
        migrations.CreateModel(
            name='PublicAPILimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.CharField(choices=[('standard', 'Standard'), ('premium', 'Premium'), ('pro', 'Pro')], max_length=20, unique=True)),
                ('requests_per_hour', models.IntegerField(help_text='Запросов в час')),
                ('requests_per_day', models.IntegerField(help_text='Запросов в день')),
                ('max_file_size_mb', models.IntegerField(help_text='Максимальный размер файла в MB')),
                ('max_files_per_request', models.IntegerField(help_text='Максимум файлов за запрос')),
                ('storage_limit_mb', models.IntegerField(help_text='Лимит хранилища в MB')),
                ('api_access', models.BooleanField(default=False, help_text='Доступ к API')),
                ('custom_domains', models.BooleanField(default=False, help_text='Кастомные домены')),
                ('advanced_analytics', models.BooleanField(default=False, help_text='Продвинутая аналитика')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Лимит публичного API',
                'verbose_name_plural': 'Лимиты публичного API',
            },
        ),
        migrations.CreateModel(
            name='PublicAPIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('api_key', models.CharField(help_text='Уникальный API ключ для доступа', max_length=64, unique=True)),
                ('api_secret', models.CharField(help_text='Секретный ключ для подписи запросов', max_length=128)),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли API ключ')),
                ('permissions', models.JSONField(default=dict, help_text='Разрешения API ключа')),
                ('rate_limit_per_hour', models.IntegerField(default=1000, help_text='Лимит запросов в час')),
                ('max_file_size_mb', models.IntegerField(default=100, help_text='Максимальный размер файла в MB')),
                ('total_requests', models.IntegerField(default=0, help_text='Общее количество запросов')),
                ('last_used_at', models.DateTimeField(blank=True, help_text='Последнее использование', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('container', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='public_api_key', to='storage.storagecontainer')),
            ],
            options={
                'verbose_name': 'API ключ публичного API',
                'verbose_name_plural': 'API ключи публичного API',
            },
        ),
        migrations.CreateModel(
            name='PublicAPIRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method', models.CharField(help_text='HTTP метод', max_length=10)),
                ('endpoint', models.CharField(help_text='Эндпоинт API', max_length=200)),
                ('status_code', models.IntegerField(help_text='HTTP статус код')),
                ('user_agent', models.CharField(blank=True, help_text='User Agent', max_length=500)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP адрес', null=True)),
                ('request_size', models.IntegerField(default=0, help_text='Размер запроса в байтах')),
                ('response_size', models.IntegerField(default=0, help_text='Размер ответа в байтах')),
                ('response_time', models.FloatField(blank=True, help_text='Время ответа в секундах', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Сообщение об ошибке')),
                ('error_code', models.CharField(blank=True, help_text='Код ошибки', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('api_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='storagepublicapi.publicapikey')),
                ('file_uploaded', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='public_api_requests', to='storage.storagefile')),
            ],
            options={
                'verbose_name': 'Запрос публичного API',
                'verbose_name_plural': 'Запросы публичного API',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PublicAPIUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Дата статистики')),
                ('total_requests', models.IntegerField(default=0, help_text='Общее количество запросов')),
                ('successful_requests', models.IntegerField(default=0, help_text='Успешных запросов')),
                ('failed_requests', models.IntegerField(default=0, help_text='Неудачных запросов')),
                ('files_uploaded', models.IntegerField(default=0, help_text='Загружено файлов')),
                ('files_downloaded', models.IntegerField(default=0, help_text='Скачано файлов')),
                ('total_upload_size', models.BigIntegerField(default=0, help_text='Общий размер загрузок')),
                ('total_download_size', models.BigIntegerField(default=0, help_text='Общий размер скачиваний')),
                ('total_response_time', models.FloatField(default=0.0, help_text='Общее время ответов')),
                ('average_response_time', models.FloatField(default=0.0, help_text='Среднее время ответа')),
                ('popular_endpoints', models.JSONField(default=dict, help_text='Статистика по эндпоинтам')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('api_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_stats', to='storagepublicapi.publicapikey')),
            ],
            options={
                'verbose_name': 'Статистика публичного API',
                'verbose_name_plural': 'Статистика публичного API',
                'ordering': ['-date'],
                'unique_together': {('api_key', 'date')},
            },
        ),
    ]
