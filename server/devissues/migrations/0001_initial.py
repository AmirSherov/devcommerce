# Generated by Django 5.2.3 on 2025-07-05 19:12

import devissues.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DevIssue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание проблемы')),
                ('status', models.CharField(choices=[('pending', 'Ожидает решения'), ('solved', 'Решена')], default='pending', max_length=20, verbose_name='Статус')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='Количество просмотров')),
                ('likes', models.PositiveIntegerField(default=0, verbose_name='Количество лайков')),
                ('comments_count', models.PositiveIntegerField(default=0, verbose_name='Количество комментариев')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True, verbose_name='URL-путь')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dev_issues', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'DevIssue',
                'verbose_name_plural': 'DevIssues',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DevIssueComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(verbose_name='Содержание комментария')),
                ('likes', models.PositiveIntegerField(default=0, verbose_name='Количество лайков')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dev_issue_comments', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('dev_issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='devissues.devissue', verbose_name='DevIssue')),
            ],
            options={
                'verbose_name': 'Комментарий DevIssue',
                'verbose_name_plural': 'Комментарии DevIssue',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DevIssueCommentLike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_likes', to='devissues.devissuecomment', verbose_name='Комментарий')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dev_issue_comment_likes', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лайк комментария DevIssue',
                'verbose_name_plural': 'Лайки комментариев DevIssue',
            },
        ),
        migrations.CreateModel(
            name='DevIssueImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to=devissues.models.devissue_image_upload_path, validators=[devissues.models.validate_image_size], verbose_name='Изображение')),
                ('image_url', models.URLField(blank=True, verbose_name='URL изображения')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('dev_issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='devissues.devissue', verbose_name='DevIssue')),
            ],
            options={
                'verbose_name': 'Изображение DevIssue',
                'verbose_name_plural': 'Изображения DevIssue',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='DevIssueLike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('dev_issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes_relation', to='devissues.devissue', verbose_name='DevIssue')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dev_issue_likes', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лайк DevIssue',
                'verbose_name_plural': 'Лайки DevIssue',
            },
        ),
        migrations.AddIndex(
            model_name='devissue',
            index=models.Index(fields=['status', 'created_at'], name='devissues_d_status_d85241_idx'),
        ),
        migrations.AddIndex(
            model_name='devissue',
            index=models.Index(fields=['author', 'status'], name='devissues_d_author__90b575_idx'),
        ),
        migrations.AddIndex(
            model_name='devissue',
            index=models.Index(fields=['slug'], name='devissues_d_slug_df13f8_idx'),
        ),
        migrations.AddIndex(
            model_name='devissue',
            index=models.Index(fields=['views'], name='devissues_d_views_e53d4c_idx'),
        ),
        migrations.AddIndex(
            model_name='devissue',
            index=models.Index(fields=['likes'], name='devissues_d_likes_70fc86_idx'),
        ),
        migrations.AddIndex(
            model_name='devissuecomment',
            index=models.Index(fields=['dev_issue', 'created_at'], name='devissues_d_dev_iss_d5a19e_idx'),
        ),
        migrations.AddIndex(
            model_name='devissuecomment',
            index=models.Index(fields=['author', 'created_at'], name='devissues_d_author__941930_idx'),
        ),
        migrations.AddIndex(
            model_name='devissuecommentlike',
            index=models.Index(fields=['comment', 'user'], name='devissues_d_comment_bb515f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='devissuecommentlike',
            unique_together={('comment', 'user')},
        ),
        migrations.AddIndex(
            model_name='devissueimage',
            index=models.Index(fields=['dev_issue', 'order'], name='devissues_d_dev_iss_0b2dd3_idx'),
        ),
        migrations.AddIndex(
            model_name='devissuelike',
            index=models.Index(fields=['dev_issue', 'user'], name='devissues_d_dev_iss_01a7cc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='devissuelike',
            unique_together={('dev_issue', 'user')},
        ),
    ]
